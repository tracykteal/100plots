<html>
<head><title>Day 2</title></head>

<body>

<h3>Day 2 - Setting up rendering of IPython Notebooks on the web with github</h3>

<p>
<pre>
Since I want the IPython Notebook to be rendered on the web site and 
not just be a link, I first tried converting it to HTML with 
nbconvert.  However, since I want everything to be on github anyway, 
Adina Howe recommended that I just use the nbviewer software through
github.  She actually had a dream that she told me to do that, so 
who I am to argue.  

So, the first thing I need to do is create a git repository and commit
the files there.  I thought I'd just walk through that process for
those who are interested.

First, create a github account at http://github.com

Then click 'Create a Repository'

My github account is tracykteal and I'm calling the repository '100plots'

Now I need to my local computer and initialize my repository there

I'm on Mac OSX, so I open a terminal (actually I already have one open, 
because I mainly like to work at the terminal).  Then I navigate to the
place where I have my files 

cd ~tracyt/Documents/Projects/100plots

I'll create a README.md file, because it's good practice to have a file
like this that tells you what's in the repository

I mainly use emacs as my command line text editor, so 

emacs README.md

and add some text 

This repository contains the text files and IPython Notebook files for the 
100plots project.

Author: Tracy K. Teal

Now I'll initialize the repository and add this file
(After you create the repository on github, it basically tells you how
to do this part)

# Initialize the repository
git init

# Add the README file to the repository. This is so git knows
# about the file.  It will ignore files in the directory that
# you haven't told it about
git add README.md

# Commit the changes locally
# The -m "message" part is to create your commit message
# All the docs tell you to make this a useful commit message and they're
# right.  You can search these messages, or it just makes it a lot 
# easier to figure out what you or someone else was thinking at a 
# particular time. There's some joke about wanting to talk to yourself
# 6 months ago, but that you're not responding to email.  Version control
# isn't just for people who work with other people.  It's for you
# to keep track of what you're doing.  Really, you won't remember.

git commit -m "Added README.md file"

# So far the changes are just on my local computer. If I want to push 
# those changes to github I need to tell it where to put them and then
# push them.  This is something different between git and version
# control systems like svn.  You can have local and remote repositories 
# with git.

git remote add origin https://github.com/tracykteal/100plots.git

Now if you go look at your github account, you'll see the README file.

I also already have the Day 1 IPython Notebook file, so I'm going to add that.

git add Day_1.ipynb
git commit -m "Adding Day 1 IPython Notebook"
git push origin master

Now I can get a git URL to post on the web site that should render the 
IPython Notebook on the website.  Let's give it a try.

I click on the Day_1.ipynb file in github.  Then, Adina gave me the tip to 
click on 'Raw' and use that URL.  If you click on those different tabs, you 
see that they give different URLs.

Got the RAW version:  
https://raw.github.com/tracykteal/100plots/master/Day_1.ipynb

Now I can go post this in the IPython Notebook Viewer
It's a web site where you can post a notebook link and it renders it 
as HTML

http://nbviewer.ipython.org

When I post in the github, link I get 

http://nbviewer.ipython.org/urls/raw.github.com/tracykteal/100plots/master/Day_1.ipynb

I can just post this link on the web site, or I could view the source code,
then put that source code on the web site.  I can also print the 
IPython Notebooks to pdf and link in the pdf.  I'll try a few different
ways and see what I like.  For now, I'll just have the link to the viewer
and the notebook on github.


</pre>
</body>




